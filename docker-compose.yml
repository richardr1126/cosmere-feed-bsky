services:
  postgres:
    container_name: postgres
    image: postgres
    env_file:
      - .env
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  firehose:
    container_name: firehose
    image: richardr1126/cosmere-firehose
    build:
      context: ./firehose
    env_file:
      - .env
    stdin_open: true
    tty: true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "health_check.py"] # Command to check the container's health
      interval: 60s # Time between each health check
      timeout: 10s # Time allowed for the health check to complete
      retries: 2 # Number of failed health checks before marking as unhealthy
      start_period: 60s # Grace period before starting health checks after container starts
    depends_on:
      - postgres
    labels:
      - autoheal_firehose=true # Label to enable auto-healing for this container

  scheduler:
    container_name: scheduler
    image: richardr1126/cosmere-db-scheduler
    build:
      context: ./scheduler
    env_file:
      - .env
    restart: unless-stopped
    stdin_open: true
    tty: true
    depends_on:
      - postgres
      - firehose

  web:
    container_name: web
    image: richardr1126/cosmere-feed
    build:
      context: .
    env_file:
      - .env
    ports:
      - "8000:8000"
    stdin_open: true
    tty: true
    restart: unless-stopped
    depends_on:
      - postgres

  autoheal:
    deploy:
      replicas: 1
    image: willfarrell/autoheal:latest
    container_name: autoheal
    restart: unless-stopped
    environment:
      - AUTOHEAL_CONTAINER_LABEL=autoheal_firehose # Label to specify which containers to monitor
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Allows access to Docker daemon to restart containers

volumes:
  dbdata: